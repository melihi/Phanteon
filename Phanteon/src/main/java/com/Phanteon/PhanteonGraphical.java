/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Phanteon;

import com.Phanteon.Console.*;
import com.Phanteon.libs.CheckProxy;
import com.Phanteon.libs.PhanteonNote;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.lang.management.RuntimeMXBean;
import java.lang.management.ThreadMXBean;
import java.net.URI;
import java.net.URL;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.logging.ConsoleHandler;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.LogManager;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ScrollPaneConstants;

import javax.swing.SwingUtilities;
import javax.swing.table.TableModel;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import javax.swing.tree.DefaultMutableTreeNode;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

/**
 *
 * @author https://github.com/melihi
 */
public class PhanteonGraphical extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form PhanteonGraphical
     */
    public PhanteonGraphical() {

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                Image image = new ImageIcon("imgs/phanteonIcon.png").getImage();
                setIconImage(image);

                initComponents();

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        SitemapScreenShoot = new javax.swing.JMenuItem();
        SitemapBrowser = new javax.swing.JMenuItem();
        SitemapVulnList = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        SitemapNikto = new javax.swing.JMenuItem();
        SitemapRequestResponse = new javax.swing.JMenuItem();
        SitmapWaf = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        HiddenDirectoryScreenShoot = new javax.swing.JMenuItem();
        HiddenDirectoryBrowser = new javax.swing.JMenuItem();
        HiddenDirectoryVulnList = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        HiddenDirectoryNikto = new javax.swing.JMenuItem();
        HiddenDirectoryResponse = new javax.swing.JMenuItem();
        HIddenDirectoryWaf = new javax.swing.JMenuItem();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        SubdomainCopy = new javax.swing.JMenuItem();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        PossibleVulnCopy = new javax.swing.JMenuItem();
        jProgressBar1 = new javax.swing.JProgressBar();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel18 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jLabel34 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jSlider2 = new javax.swing.JSlider();
        jLabel42 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jTabbedPane7 = new javax.swing.JTabbedPane();
        jScrollPane23 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextArea();
        jTextArea1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton7 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jScrollPane19 = new javax.swing.JScrollPane();
        jEditorPane6 = new javax.swing.JEditorPane();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane20 = new javax.swing.JScrollPane();
        jEditorPane7 = new javax.swing.JEditorPane();
        jScrollPane21 = new javax.swing.JScrollPane();
        jEditorPane8 = new javax.swing.JEditorPane();
        jLabel14 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jScrollPane24 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jPanel29 = new javax.swing.JPanel();
        jTextField16 = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jPanel30 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jTextField17 = new javax.swing.JTextField();
        jScrollPane26 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jPanel10 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jButton3 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane14 = new javax.swing.JScrollPane();
        jEditorPane2 = new javax.swing.JEditorPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTree2 = new javax.swing.JTree();
        jScrollPane25 = new javax.swing.JScrollPane();
        jEditorPane5 = new javax.swing.JEditorPane();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jScrollPane18 = new javax.swing.JScrollPane();
        jEditorPane4 = new javax.swing.JEditorPane();
        jButton6 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        SitemapScreenShoot.setText("Take multiple screenshot");
        SitemapScreenShoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SitemapScreenShootActionPerformed(evt);
            }
        });
        jPopupMenu1.add(SitemapScreenShoot);

        SitemapBrowser.setText("Open with WebBrowser");
        SitemapBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SitemapBrowserActionPerformed(evt);
            }
        });
        jPopupMenu1.add(SitemapBrowser);

        SitemapVulnList.setText("Add to possible vuln list");
        SitemapVulnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SitemapVulnListActionPerformed(evt);
            }
        });
        jPopupMenu1.add(SitemapVulnList);

        jMenu5.setText("Phanteon Thread Scanner");

        SitemapNikto.setText("Nikto");
        SitemapNikto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SitemapNiktoActionPerformed(evt);
            }
        });
        jMenu5.add(SitemapNikto);

        SitemapRequestResponse.setText("Request & Response");
        SitemapRequestResponse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SitemapRequestResponseActionPerformed(evt);
            }
        });
        jMenu5.add(SitemapRequestResponse);

        SitmapWaf.setText("Wafw00f");
        SitmapWaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SitmapWafActionPerformed(evt);
            }
        });
        jMenu5.add(SitmapWaf);

        jPopupMenu1.add(jMenu5);

        HiddenDirectoryScreenShoot.setText("Take multiple screenshot");
        HiddenDirectoryScreenShoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HiddenDirectoryScreenShootActionPerformed(evt);
            }
        });
        jPopupMenu2.add(HiddenDirectoryScreenShoot);

        HiddenDirectoryBrowser.setText("Open with WebBrowser");
        HiddenDirectoryBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HiddenDirectoryBrowserActionPerformed(evt);
            }
        });
        jPopupMenu2.add(HiddenDirectoryBrowser);

        HiddenDirectoryVulnList.setText("Add to possible vuln list");
        HiddenDirectoryVulnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HiddenDirectoryVulnListActionPerformed(evt);
            }
        });
        jPopupMenu2.add(HiddenDirectoryVulnList);

        jMenu6.setText("Phanteon Thread Scanner");

        HiddenDirectoryNikto.setText("Nikto");
        HiddenDirectoryNikto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HiddenDirectoryNiktoActionPerformed(evt);
            }
        });
        jMenu6.add(HiddenDirectoryNikto);

        HiddenDirectoryResponse.setText("Request & Response");
        HiddenDirectoryResponse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HiddenDirectoryResponseActionPerformed(evt);
            }
        });
        jMenu6.add(HiddenDirectoryResponse);

        HIddenDirectoryWaf.setText("Wafw00f");
        HIddenDirectoryWaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HIddenDirectoryWafActionPerformed(evt);
            }
        });
        jMenu6.add(HIddenDirectoryWaf);

        jPopupMenu2.add(jMenu6);

        SubdomainCopy.setText("Copy");
        SubdomainCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubdomainCopyActionPerformed(evt);
            }
        });
        jPopupMenu3.add(SubdomainCopy);

        PossibleVulnCopy.setText("copy");
        jPopupMenu4.add(PossibleVulnCopy);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Phanteon Scanner");
        setMinimumSize(new java.awt.Dimension(100, 100));

        jProgressBar1.setFont(new java.awt.Font("Source Code Pro Light", 1, 18)); // NOI18N
        jProgressBar1.setForeground(new java.awt.Color(209, 50, 66));
        jProgressBar1.setMinimumSize(new java.awt.Dimension(300, 28));
        jProgressBar1.setPreferredSize(new java.awt.Dimension(1500, 28));
        jProgressBar1.setStringPainted(true);
        jProgressBar1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jProgressBar1StateChanged(evt);
            }
        });

        jPanel18.setBackground(java.awt.Color.lightGray);
        jPanel18.setToolTipText("");
        jPanel18.setMaximumSize(new java.awt.Dimension(416, 28));
        jPanel18.setMinimumSize(new java.awt.Dimension(416, 28));

        jLabel1.setToolTipText("Manuel Scan");
        jLabel1.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel1.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel1.setPreferredSize(new java.awt.Dimension(32, 32));

        jLabel8.setToolTipText("Whois");
        jLabel8.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel8.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel8.setPreferredSize(new java.awt.Dimension(32, 32));

        jLabel9.setToolTipText("Nmap");
        jLabel9.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel9.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel9.setPreferredSize(new java.awt.Dimension(32, 32));

        jLabel10.setToolTipText("Ffuf");
        jLabel10.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel10.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel10.setPreferredSize(new java.awt.Dimension(32, 32));

        jLabel11.setToolTipText("Amass");
        jLabel11.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel11.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel11.setPreferredSize(new java.awt.Dimension(32, 32));

        jLabel12.setToolTipText("Gospider");
        jLabel12.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel12.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel12.setPreferredSize(new java.awt.Dimension(32, 32));

        jLabel13.setToolTipText("AsnLookUp");
        jLabel13.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel13.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel13.setPreferredSize(new java.awt.Dimension(32, 32));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane6.setBackground(new java.awt.Color(255, 51, 51));
        jTabbedPane6.setPreferredSize(new java.awt.Dimension(900, 800));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setMinimumSize(new java.awt.Dimension(10, 10));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 100));

        jPanel25.setBackground(new java.awt.Color(153, 153, 153));
        jPanel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel25.setPreferredSize(new java.awt.Dimension(700, 100));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel15.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel15.setText("Depth");
        jLabel15.setToolTipText("Scan depth . bigger number scans deeper.");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Targets" }));
        jComboBox3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBox3MouseEntered(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel17.setText("Scan Port ");

        jCheckBox1.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jCheckBox1.setText("Site Map");
        jCheckBox1.setToolTipText("gospider");
        jCheckBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jCheckBox2.setText("Port & Version Scanning");
        jCheckBox2.setToolTipText("nmap");
        jCheckBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox4.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jCheckBox4.setText("Hidden Directory");
        jCheckBox4.setToolTipText("ffuf");
        jCheckBox4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox7.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jCheckBox7.setText("Subdomain");
        jCheckBox7.setToolTipText("amass");
        jCheckBox7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel34.setText("See old scans");

        jSlider1.setMajorTickSpacing(5000);
        jSlider1.setMaximum(65535);
        jSlider1.setMinimum(10000);
        jSlider1.setMinorTickSpacing(1000);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTextField8.setFont(new java.awt.Font("Source Code Pro Medium", 0, 12)); // NOI18N
        jTextField8.setText("http://51.158.99.51");

        jTextField9.setFont(new java.awt.Font("Source Code Pro Medium", 0, 12)); // NOI18N
        jTextField9.setText("8811");

        jLabel39.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel39.setText("Proxy [ip - port]");

        jButton10.setText("Test Proxy Connection");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel40.setText("Wordlist for web fuzzing");

        jTextField10.setEditable(false);
        jTextField10.setFont(new java.awt.Font("Source Code Pro Medium", 0, 12)); // NOI18N
        jTextField10.setText("PhanteonLists/SecLists/Discovery/Web-Content/common.txt");

        jButton11.setText("Select");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel41.setText("Wordlist for subdomain discovery");

        jTextField11.setEditable(false);
        jTextField11.setFont(new java.awt.Font("Source Code Pro Medium", 0, 12)); // NOI18N
        jTextField11.setText("PhanteonLists/PhanteonSublistV3");

        jButton12.setText("Select");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jSlider2.setMajorTickSpacing(100);
        jSlider2.setMaximum(2000);
        jSlider2.setMinimum(100);
        jSlider2.setMinorTickSpacing(100);
        jSlider2.setPaintLabels(true);
        jSlider2.setPaintTicks(true);

        jLabel42.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel42.setText("Ffuf thread");
        jLabel42.setToolTipText("Scan depth . bigger number scans deeper.");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        jComboBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        jComboBox4.setSelectedIndex(4);
        jComboBox4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel43.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel43.setText("Concurrent");
        jLabel43.setToolTipText("Scan depth . bigger number scans deeper.");

        jLabel44.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel44.setText("Thread");
        jLabel44.setToolTipText("Scan depth . bigger number scans deeper.");

        jLabel45.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel45.setText("Config for subdomain discovery");

        jTextField14.setFont(new java.awt.Font("Source Code Pro Medium", 0, 12)); // NOI18N
        jTextField14.setText(".php,.jsp,.html,.aspx");

        jButton14.setText("Select");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Nimbus Sans", 0, 14)); // NOI18N
        jLabel46.setText("Ffuf extension list");
        jLabel46.setToolTipText("Scan depth . bigger number scans deeper.");

        jTextField15.setEditable(false);
        jTextField15.setFont(new java.awt.Font("Source Code Pro Medium", 0, 12)); // NOI18N
        jTextField15.setText("config.ini");

        jLabel47.setBackground(new java.awt.Color(0, 0, 0));
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel47.setOpaque(true);
        jLabel47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel47MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15)
                            .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel25Layout.createSequentialGroup()
                                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel25Layout.createSequentialGroup()
                                        .addComponent(jTextField8)
                                        .addGap(107, 107, 107))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                                        .addComponent(jComboBox1, 0, 128, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel44)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox2, 0, 119, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel43)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox4, 0, 94, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)))
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addGap(18, 18, 18)
                        .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel25Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel25Layout.createSequentialGroup()
                                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel45))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField11)
                                    .addComponent(jTextField15))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField14)
                        .addGap(203, 203, 203))
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel44))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel41)
                    .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton12)))
                .addGap(7, 7, 7)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(jButton14)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox7)
                .addGap(29, 29, 29)
                .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        jSlider1.setPaintLabels(true);
        jLabel47.setIcon(new ImageIcon("imgs/phanteon8.png"));

        jPanel26.setBackground(new java.awt.Color(153, 153, 153));
        jPanel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setBackground(new java.awt.Color(36, 44, 68));
        jButton1.setFont(new java.awt.Font("Source Code Pro Black", 0, 48)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SCAN ");
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setEnabled(true);
        jButton1.setIconTextGap(15);
        jButton1.setMaximumSize(new java.awt.Dimension(500, 500));
        jButton1.setMinimumSize(new java.awt.Dimension(10, 10));
        jButton1.setPreferredSize(new java.awt.Dimension(147, 70));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Source Code Pro", 0, 14)); // NOI18N
        jLabel5.setText("ASN (optional)");

        jTextField4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextField4.setText("nmap.org");
        jTextField4.setNextFocusableComponent(jTextField3);

        jLabel6.setFont(new java.awt.Font("Source Code Pro", 0, 14)); // NOI18N
        jLabel6.setText("Only domain ( target.com , target.co.uk , test.de etc. )");

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextField2.setText("nmap");
        jTextField2.setNextFocusableComponent(jTextField4);

        jLabel3.setFont(new java.awt.Font("Source Code Pro", 0, 14)); // NOI18N
        jLabel3.setText("Company Name");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextField1.setText("http://scanme.nmap.org/");
        jTextField1.setNextFocusableComponent(jTextField2);

        jLabel2.setFont(new java.awt.Font("Source Code Pro", 0, 14)); // NOI18N
        jLabel2.setText("Destination URL");

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 289, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jButton1.setIcon(new ImageIcon("imgs/vulnerability.png"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        jTabbedPane6.addTab("Target", jPanel3);

        jPanel24.setBackground(new java.awt.Color(0, 0, 0));
        jPanel24.setPreferredSize(new java.awt.Dimension(900, 801));

        jLabel16.setBackground(new java.awt.Color(204, 255, 102));
        jLabel16.setForeground(new java.awt.Color(51, 255, 0));
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabel16.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jPanel28.setBackground(new java.awt.Color(38, 50, 56));

        jLabel20.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("CIDR    :");

        jLabel19.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Ip      :");

        jLabel18.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Target  :");

        jLabel21.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Country :");

        jLabel22.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("ASN     :");

        jLabel23.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("NetRange:");

        jLabel24.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(209, 50, 66));
        jLabel24.setText("-");

        jLabel25.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(209, 50, 66));
        jLabel25.setText("-");

        jLabel26.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(209, 50, 66));
        jLabel26.setText("-");

        jLabel27.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(209, 50, 66));
        jLabel27.setText("-");

        jLabel28.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(209, 50, 66));
        jLabel28.setText("-");

        jLabel29.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(209, 50, 66));
        jLabel29.setText("-");

        jLabel30.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Address  :");

        jLabel31.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(209, 50, 66));
        jLabel31.setText("-");

        jLabel32.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Organization name :");

        jLabel33.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(209, 50, 66));
        jLabel33.setText("-");

        jLabel35.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Organization  :");

        jLabel36.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(209, 50, 66));
        jLabel36.setText("-");

        jLabel37.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("NetName  :");

        jLabel38.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(209, 50, 66));
        jLabel38.setText("-");
        jLabel38.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel38.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel38.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 296, Short.MAX_VALUE)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jLabel33)
                            .addComponent(jLabel36)))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 7, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel28Layout.createSequentialGroup()
                            .addComponent(jLabel31)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel33)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel36)
                            .addGap(33, 33, 33))
                        .addGroup(jPanel28Layout.createSequentialGroup()
                            .addComponent(jLabel37)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel35)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel32)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel30)))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel27))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel28))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel29))))
                .addGap(18, 18, 18)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel26))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane7.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 12)); // NOI18N

        jList3.setBackground(new java.awt.Color(38, 50, 56));
        jList3.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jList3.setForeground(java.awt.Color.green);
        jScrollPane23.setViewportView(jList3);

        jTabbedPane7.addTab("Traceroute", jScrollPane23);

        jTextArea4.setEditable(false);
        jTextArea4.setBackground(new java.awt.Color(38, 50, 56));
        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jTextArea4.setForeground(new java.awt.Color(209, 50, 66));
        jTextArea4.setRows(5);
        jScrollPane11.setViewportView(jTextArea4);

        jTabbedPane7.addTab("Ip range", jScrollPane11);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane7)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(jTabbedPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel16.setIcon(new ImageIcon("imgs/radar.gif"));

        jTabbedPane6.addTab("-", jPanel24);

        jTextPane1.setEditable(false);
        jTextPane1.setBackground(new Color(38, 50, 56)
        );
        jTextPane1.setColumns(20);
        jTextPane1.setFont(new java.awt.Font("Source Code Pro Semibold", 1, 16)); // NOI18N
        jTextPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTextPane1.setRows(5);
        jTextPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextPane1.setInheritsPopupMenu(true);
        jScrollPane6.setViewportView(jTextPane1);

        jTextArea1.setFont(new java.awt.Font("Liberation Mono", 0, 18)); // NOI18N
        jTextArea1.setInheritsPopupMenu(true);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });

        jButton2.setBackground(java.awt.SystemColor.inactiveCaption);
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jTextArea1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6))
                .addGap(0, 0, 0))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 741, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)))
        );

        jButton2.setIcon(new ImageIcon("imgs/enter.png"));

        jTabbedPane6.addTab("Basic Terminal", jPanel23);

        jTabbedPane1.setBackground(new java.awt.Color(0, 0, 0));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTabbedPane1.setForeground(new java.awt.Color(153, 153, 153));
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("URW Gothic", 0, 14)); // NOI18N
        jTabbedPane1.setInheritsPopupMenu(true);
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(0, 0));

        jTable3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable3.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Source", "Status Code", "Address"
            }
        ));
        jTable3.setInheritsPopupMenu(true);
        jTable3.setRowHeight(25);
        jTable3.setShowVerticalLines(true);
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable3MouseReleased(evt);
            }
        });
        jScrollPane10.setViewportView(jTable3);
        jTable3.setAutoCreateRowSorter(true);
        jTable3.add(jPopupMenu1);

        jTable3.setBackground(new Color(38, 50, 56));
        jTable3.setForeground(new Color(255, 255, 255));
        jTable3.setGridColor(new Color(255, 255, 255));
        jTable3.setSelectionBackground(new Color(209, 50, 66));

        jTable3.getTableHeader().setFont(new Font("Segoe UI", 1, 16));
        jTable3.getTableHeader().setBackground(new Color(32, 136, 203));
        jTable3.getTableHeader().setForeground(new Color(0, 0, 0));

        jTable3.getColumnModel().getColumn(0).setResizable(false);
        jTable3.getColumnModel().getColumn(0).setPreferredWidth(5);
        jTable3.getColumnModel().getColumn(1).setResizable(false);
        jTable3.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable3.getColumnModel().getColumn(2).setResizable(false);
        jTable3.getColumnModel().getColumn(2).setPreferredWidth(800);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1286, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Site Map ", jPanel2);
        jPanel2.getAccessibleContext().setAccessibleDescription("");

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Port", "Name", "Version", "Product", "State", "Reason"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setRowHeight(25);
        jTable1.setShowGrid(false);
        jTable1.setShowVerticalLines(true);
        jScrollPane2.setViewportView(jTable1);
        jTable1.setAutoCreateRowSorter(true);

        jTable1.setBackground(new Color(38, 50, 56));
        jTable1.setForeground(new Color(255, 255, 255));
        jTable1.setGridColor(new Color(255, 255, 255));
        jTable1.setSelectionBackground(new Color(209, 50, 66));

        jTable1.getTableHeader().setFont(new Font("Segoe UI", 1, 16));
        jTable1.getTableHeader().setBackground(new Color(32, 136, 203));
        jTable1.getTableHeader().setForeground(new Color(0, 0, 0));

        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(400);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(50);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Port & Version Scanning ", jPanel1);

        jTextPane2.setEditable(false);
        jTextPane2.setBackground(new Color(38, 50, 56));
        jTextPane2.setColumns(20);
        jTextPane2.setFont(new java.awt.Font("Source Code Pro Medium", 1, 16)); // NOI18N
        jTextPane2.setForeground(new java.awt.Color(255, 255, 255));
        jTextPane2.setLineWrap(true);
        jTextPane2.setRows(5);
        jTextPane2.setWrapStyleWord(true);
        jScrollPane8.setViewportView(jTextPane2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8)
        );

        jTabbedPane1.addTab("Whois ", jPanel4);

        jTable2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable2.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FUZZ", "Url", "Redirect location", "Position", "Status code", "Content length", "Content words", "Content lines"
            }
        ));
        jTable2.setInheritsPopupMenu(true);
        jTable2.setRowHeight(25);
        jTable2.setShowVerticalLines(true);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);
        jTable2.setAutoCreateRowSorter(true);

        jTable2.add(jPopupMenu1);

        jTable2.setBackground(new Color(38, 50, 56));
        jTable2.setForeground(new Color(255, 255, 255));
        jTable2.setGridColor(new Color(255, 255, 255));
        jTable2.setSelectionBackground(new Color(209, 50, 66));

        jTable2.getTableHeader().setFont(new Font("Segoe UI", 1, 16));
        jTable2.getTableHeader().setBackground(new Color(32, 136, 203));
        jTable2.getTableHeader().setForeground(new Color(0, 0, 0));

        jTable2.getColumnModel().getColumn(0).setResizable(false);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(1).setResizable(false);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(500);
        jTable2.getColumnModel().getColumn(2).setResizable(false);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(3).setResizable(false);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(20);
        jTable2.getColumnModel().getColumn(4).setResizable(false);
        jTable2.getColumnModel().getColumn(4).setPreferredWidth(20);
        jTable2.getColumnModel().getColumn(5).setResizable(false);
        jTable2.getColumnModel().getColumn(5).setPreferredWidth(20);
        jTable2.getColumnModel().getColumn(6).setResizable(false);
        jTable2.getColumnModel().getColumn(6).setPreferredWidth(20);
        jTable2.getColumnModel().getColumn(7).setResizable(false);
        jTable2.getColumnModel().getColumn(7).setPreferredWidth(20);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hidden Directory", jPanel5);

        jList1.setBackground(new java.awt.Color(38, 50, 56));
        jList1.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane5.setViewportView(jList1);
        jList1.setSelectionBackground(new Color(209, 50, 66));

        jButton7.setText("Copy Selected List Link");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton15.setText("Open with browser");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton5.setText("Open all with browser");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1286, Short.MAX_VALUE)
            .addComponent(jButton15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manuel Recon", jPanel6);

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(38, 50, 56));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Source Code Pro Semibold", 1, 25)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );

        jTabbedPane1.addTab("AsnLookUp", jPanel7);

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jTable4.setFont(new java.awt.Font("Source Code Pro Light", 1, 16)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "URLs"
            }
        ));
        jTable4.setRowHeight(25);
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable4MouseReleased(evt);
            }
        });
        jScrollPane22.setViewportView(jTable4);
        jTable4.setBackground(new Color(38, 50, 56));
        jTable4.setForeground(new Color(255, 255, 255));
        jTable4.setGridColor(new Color(255, 255, 255));
        jTable4.setSelectionBackground(new Color(209, 50, 66));
        jTable4.getTableHeader().setFont(new Font("Segoe UI", 1, 16));
        jTable4.getTableHeader().setBackground(new Color(32, 136, 203));
        jTable4.getTableHeader().setForeground(new Color(0, 0, 0));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane22, javax.swing.GroupLayout.DEFAULT_SIZE, 1286, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane22, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Posible Vulnerable URLS", jPanel16);

        jTextField7.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 12)); // NOI18N
        jTextField7.setText("https://google.com:443/");

        jLabel4.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jLabel4.setText("Adress");

        jButton8.setText("Request");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jEditorPane6.setEditable(false);
        jEditorPane6.setContentType("plain/text"); // NOI18N
        jEditorPane6.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jScrollPane19.setViewportView(jEditorPane6);

        jEditorPane7.setContentType("text/html"); // NOI18N
        jScrollPane20.setViewportView(jEditorPane7);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane20)
        );

        jTabbedPane5.addTab("ScreenShot", jPanel22);

        jEditorPane8.setContentType("text/html"); // NOI18N
        jScrollPane21.setViewportView(jEditorPane8);
        HTMLEditorKit kit = new HTMLEditorKit();
        jEditorPane8.setEditorKit(kit);
        StyleSheet styleSheet = kit.getStyleSheet();

        jTabbedPane5.addTab("Basic Render", jScrollPane21);

        jLabel14.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jLabel14.setText("Example : https://example.com/ , http://example.com/");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GET", "POST" }));

        jTextField12.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 12)); // NOI18N
        jTextField12.setText("POST=DATA");

        jButton13.setText("Search");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                                .addGap(526, 526, 526))
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(jTextField13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton13)
                                .addGap(5, 5, 5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField13)
                            .addComponent(jButton13)))
                    .addComponent(jTabbedPane5))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Request & Response", jPanel21);

        jList5.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jScrollPane24.setViewportView(jList5);
        jList5.setBackground(new java.awt.Color(38, 50, 56));

        jList5.setForeground(new java.awt.Color(255, 255, 255));

        jTabbedPane2.addTab("Exploit Suggester", jScrollPane24);

        jTextField16.setEditable(false);
        jTextField16.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N

        jButton16.setText("Select url list");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jTextArea5.setEditable(false);
        jTextArea5.setColumns(20);
        jTextArea5.setFont(new java.awt.Font("Source Code Pro Medium", 0, 16)); // NOI18N
        jTextArea5.setRows(5);
        jScrollPane17.setViewportView(jTextArea5);

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addComponent(jTextField16, javax.swing.GroupLayout.DEFAULT_SIZE, 957, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane17)
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField16)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("ScreenShot Machine", jPanel29);

        jButton17.setText("Scan");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jTextField17.setFont(new java.awt.Font("Source Code Pro Medium", 0, 16)); // NOI18N

        jTextArea6.setEditable(false);
        jTextArea6.setColumns(20);
        jTextArea6.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jTextArea6.setRows(5);
        jScrollPane26.setViewportView(jTextArea6);

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                .addComponent(jTextField17, javax.swing.GroupLayout.DEFAULT_SIZE, 1086, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane26)
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addComponent(jScrollPane26, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Nikto", jPanel30);

        jTextField5.setFont(new java.awt.Font("Source Code Pro Medium", 0, 16)); // NOI18N
        jTextField5.setText("Wafw00f is uses your proxy settings .");

        jButton4.setText("Detect");
        jButton4.setPreferredSize(new java.awt.Dimension(55, 27));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextArea7.setEditable(false);
        jTextArea7.setColumns(20);
        jTextArea7.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jTextArea7.setRows(5);
        jScrollPane3.setViewportView(jTextArea7);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 1086, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane3)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField5)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Waf Detection", jPanel11);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane2)
                .addGap(0, 0, 0))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.addTab("Phanteon Thread Scanner", jPanel8);

        jList2.setBackground(new java.awt.Color(38, 50, 56));
        jList2.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        jList2.setForeground(new java.awt.Color(255, 255, 255));
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jList2MouseReleased(evt);
            }
        });
        jScrollPane7.setViewportView(jList2);
        jList2.setSelectionBackground(new Color(209, 50, 66));
        jList2.add(jPopupMenu3);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7)
        );

        jTabbedPane1.addTab("Subdomain ", jPanel9);

        jDesktopPane1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                jDesktopPane1ComponentRemoved(evt);
            }
        });

        jInternalFrame1.setIconifiable(true);
        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setResizable(true);
        jInternalFrame1.setTitle("Phanote");
        jInternalFrame1.setInheritsPopupMenu(true);
        jInternalFrame1.setMinimumSize(new java.awt.Dimension(0, 0));
        jInternalFrame1.setVisible(true);

        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Nimbus Sans", 0, 16)); // NOI18N
        jTextArea3.setRows(5);
        jTextArea3.setInheritsPopupMenu(true);
        jTextArea3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea3MouseClicked(evt);
            }
        });
        jTextArea3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea3KeyTyped(evt);
            }
        });
        jScrollPane9.setViewportView(jTextArea3);

        jLabel7.setText("0:0");

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Save");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar2.add(jMenu1);

        jMenu4.setText("Edit");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem3.setText("Write Table");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuBar2.add(jMenu4);

        jInternalFrame1.setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jScrollPane9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        jButton3.setText("New note window");
        jButton3.setToolTipText("");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jInternalFrame1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(642, 642, 642)
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );

        jButton3.setIcon(new ImageIcon("imgs/note.png"));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jDesktopPane1))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        jTabbedPane1.addTab("MyNotes", jPanel10);

        jTree1.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Recon & Scan");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("SubDomain");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/OWASP/Amass");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/aboul3la/Sublist3r");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/projectdiscovery/subfinder");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/TheRook/subbrute");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/guelfoweb/knock");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Port & Version");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/robertdavidgraham/masscan");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/nmap/nmap");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Dns Scanners");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("DNSdumpster");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/darkoperator/dnsrecon");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("DNSGen");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("code.google.com/p/dnsmap/");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/fwaeytens/dnsenum");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setLargeModel(true);
        jTree1.setMaximumSize(new java.awt.Dimension(185, 84));
        jTree1.setPreferredSize(new java.awt.Dimension(185, 84));
        jTree1.setRowHeight(30);
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(jTree1);

        jEditorPane2.setContentType("text/html"); // NOI18N
        jScrollPane14.setViewportView(jEditorPane2);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
            .addComponent(jScrollPane14)
        );

        jTabbedPane3.addTab("Recon & Scan", jPanel13);

        jTree2.setFont(new java.awt.Font("Source Code Pro Semibold", 0, 16)); // NOI18N
        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Vulnerability Scanners");
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Web Application");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("XSS");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("github.com/epsylon/xsser");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("github.com/s0md3v/XSStrike");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("github.com/DanMcInerney/xsscrapy");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("github.com/gbrindisi/xsssniper");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("SQL Injection");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("github.com/sqlmapproject/sqlmap");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("sqlsus");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Sqlninja");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("github.com/Neohapsis/bbqsql/");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Command injection");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("github.com/commixproject/commix");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("SSRF");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("github.com/swisskyrepo/SSRFmap");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("General");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/sullo/nikto");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/zaproxy/zaproxy");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("github.com/wpscanteam/wpscan");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree2.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree2.setLargeModel(true);
        jTree2.setPreferredSize(new java.awt.Dimension(185, 84));
        jTree2.setRowHeight(30);
        jTree2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree2MouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(jTree2);

        jEditorPane5.setContentType("text/html"); // NOI18N
        jScrollPane25.setViewportView(jEditorPane5);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jScrollPane25)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Vulnerability Scanners", jPanel14);

        jList4.setBorder(null);
        jList4.setFont(new java.awt.Font("Source Code Pro Medium", 0, 16)); // NOI18N
        jList4.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "https://github.com/yuqian5/PasswordCollection", "https://github.com/xajkep/wordlists", "https://github.com/utkusen/turkce-wordlist", "https://github.com/jeanphorn/wordlist", "https://github.com/berzerk0/Probable-Wordlists", "https://github.com/kennyn510/wpa2-wordlists", "https://github.com/gmelodie/awesome-wordlists", "https://github.com/3ndG4me/KaliLists" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList4MouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(jList4);

        jEditorPane4.setEditable(false);
        jEditorPane4.setContentType("text/HTML"); // NOI18N
        jScrollPane18.setViewportView(jEditorPane4);
        jEditorPane4.setContentType("text/html");

        jButton6.setText("Copy Selected List Link");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton9.setText("Download automatically with git");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane18)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addGap(7, 7, 7)
                .addComponent(jButton6))
        );

        jTabbedPane3.addTab("Wordlists", jPanel20);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane1.addTab("Tool Wiki", jPanel12);

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.setIconAt(0, new ImageIcon("imgs/spider.png"));
        jTabbedPane1.setIconAt(1, new ImageIcon("imgs/server.png"));
        jTabbedPane1.setIconAt(2, new ImageIcon("imgs/relational.png"));
        jTabbedPane1.setIconAt(3, new ImageIcon("imgs/hidden.png"));
        jTabbedPane1.setIconAt(4, new ImageIcon("imgs/manuel.png"));
        jTabbedPane1.setIconAt(5, new ImageIcon("imgs/searching.png"));
        jTabbedPane1.setIconAt(6, new ImageIcon("imgs/Scanner.gif"));
        jTabbedPane1.setIconAt(7, new ImageIcon("imgs/subdomain.png"));
        jTabbedPane1.setIconAt(8, new ImageIcon("imgs/note.png"));

        jTabbedPane1.setEnabled(false);

        jTabbedPane6.addTab("Phanteon Scanning & Enumeration", jPanel27);

        jMenu2.setText("Prefrences");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("About");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1288, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(filler4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filler4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        //jProgressBar1.setForeground(Color.BLACK);
        //jProgressBar1.setBackground(new Color (38,50,56));
        javax.swing.UIManager.put("nimbusOrange", new Color(38, 50, 56));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        logr.fine("Start button pressed.");
        //Detect ip address or Url
        try {
            //IF button1 text = start ,start scan else stop everthing.

            if (status == true && jTextField1.getText().startsWith("http://") || jTextField1.getText().startsWith("https://")) {
                clearInputs();
                int result = JOptionPane.showConfirmDialog(this, "Are you Sure? You want to Continue? This will be Very Loud.If You Once Again Scanned this Target, New Results Going to Overwrite it.\n\n\n Note: Amass Gonna Start After Gospider. ", "Phanteon Scan & Enumeration",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                if (result == JOptionPane.YES_OPTION) {
                    scanLib = null;
                    StartProcesses();
                    status = false;
                    scanLib = new ScanLib();
                    scanLib.setTarget(jTextField1.getText(), jTextField2.getText(), jTextField4.getText(), jTextField3.getText());
                    scanLib.getPhanteonTarget().setPath();
                    jTabbedPane6.setTitleAt(1, scanLib.getPhanteonTarget().getJustDomain());
                    CommandExecution CreateFolder = new CommandExecution();
                    CreateFolder.commandExecutor("mkdir " + scanLib.getPhanteonTarget().getPath() + " " + scanLib.getPhanteonTarget().getPath() + "/Notes");
                    //Starting threads
                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            execute();
                        }
                    });
                    Thread check;
                    check = new Thread(new Runnable() {
                        @Override
                        public void run() {
                            loop:
                            while (true) {
                                try {
                                    System.out.println("WHILE WORKING");
                                    Thread.currentThread().sleep(5000);
                                    System.out.println("selecte > " + selectedScansString);
                                    System.out.println("active process > " + scanLib.getActiveProcess().size());
                                    if (selectedScansString != 0) {
                                        for (Map.Entry me : scanLib.getProcessStatus().entrySet()) {
                                            System.out.println("for dongu");
                                            System.out.println(me.getKey() + " " + me.getValue());
                                            System.out.println(scanLib.getProcessStatus().containsValue("null"));
                                            System.out.println(me.getKey() + " : " + me.getValue());
                                            //eger processler start veya finsihed olarak ayarlandiysa ve whois bittiyse start loopundan cikar. t2 kosulunun sebebi interrup edilemedigi icin.
                                            if (!scanLib.getProcessStatus().containsValue("null") && !t2.isAlive()) {
                                                System.out.println("EXIT LOOP");
                                                jButton1.setEnabled(true);

                                                break loop;
                                            }
                                        }
                                    } else {
                                        break loop;
                                    }

                                } catch (InterruptedException ex) {
                                    //Logger.getLogger(PhanteonGraphical.class.getName()).log(Level.SEVERE, null, ex);
                                    logr.log(Level.SEVERE, "", ex);
                                }
                            }
                            //while ends here
                        }
                    });
                    check.start();

                } else if (result == JOptionPane.NO_OPTION) {
                    System.out.println("noooo");
                } else {
                    jProgressBar1.setString("Destination url invalid.");

                }
            } else if (status == false) {
                jButton1.setEnabled(false);

                logr.log(Level.INFO, null, "Status false operation started.");
                //Killing threads
                //updating status
                jProgressBar1.setString("We are trying to stop  please wait . . . ");
                Thread check2;
                check2 = new Thread(new Runnable() {
                    @Override
                    public void run() {

                        try {
                            status = true;
                            ProcessService();

                        } catch (Exception ex) {
                            logr.log(Level.SEVERE, "", ex);
                            //Logger.getLogger(PhanteonGraphical.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                });
                check2.start();
            } else {
                System.out.println("test passed");
            }
            //stop finished
            //try finished
        } catch (Exception ex) {
            System.out.println("Error ip NumberFormatException");
            jProgressBar1.setString("Error ip NumberFormatException");
            logr.log(Level.SEVERE, "", ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void clearInputs() {
        jTextField1.setText(jTextField1.getText().replace(" ", ""));
        jTextField2.setText(jTextField2.getText().replace(" ", ""));
        jTextField3.setText(jTextField3.getText().replace(" ", ""));
        jTextField4.setText(jTextField4.getText().replace(" ", ""));
        if (!jTextField1.getText().endsWith("/")) {
            jTextField1.setText(jTextField1.getText() + "/");
        }
    }

    private void ProcessService() {

        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                jButton1.setEnabled(false);
                loop:
                while (true) {
                    System.out.println("pROCESSSERVICE WHILE");
                    try {

                        for (Map.Entry me : scanLib.getProcessStatus().entrySet()) {
                            System.out.println("pROCESSSERVICE FOR");
                            Thread.currentThread().sleep(5000);
                            switch (me.getKey().toString()) {
                                case "nmap":
                                    if (scanLib.getProcessNmap().isAlive()) {
                                        try {
                                            scanLib.getProcessNmap().destroy();

                                        } catch (Exception ex) {
                                            //System.out.println("nmap DESTROY ERROR");
                                            logr.log(Level.SEVERE, "nmap DESTROY ERROR", ex);
                                        }
                                    }
                                    break;
                                case "amass":
                                    if (scanLib.getProcessAmass().isAlive()) {
                                        try {
                                            scanLib.getProcessAmass().destroy();

                                        } catch (Exception ex) {
                                            System.out.println("amass DESTROY ERROR");
                                            logr.log(Level.SEVERE, "amass DESTROY ERROR", ex);
                                        }
                                    }
                                    break;
                                case "gospider":
                                    if (scanLib.getProcessGoSpider().isAlive()) {
                                        try {
                                            scanLib.getProcessGoSpider().destroy();

                                        } catch (Exception ex) {
                                            // System.out.println("spider DESTROY ERROR");
                                            logr.log(Level.SEVERE, "spider DESTROY ERROR", ex);
                                        }
                                    }
                                    break;
                                case "ffuf":
                                    if (scanLib.getProcessFfuf().isAlive()) {
                                        try {
                                            scanLib.getProcessFfuf().destroy();

                                        } catch (Exception ex) {
                                            // System.out.println("FFUF DESTROY ERROR");
                                            logr.log(Level.SEVERE, "FFUF DESTROY ERROR", ex);
                                        }
                                    }
                                    break;
                            }
                        }
                        if (!scanLib.getProcessStatus().values().contains("") && !scanLib.getProcessStatus().values().contains("null")) {
                            System.out.println("BREAK LOOP DIKKAT");
                            Thread.currentThread().sleep(10000);
                            SwingUtilities.invokeLater(new Runnable() {

                                @Override
                                public void run() {
                                    if (t4.isAlive()) {
                                        t4.interrupt();
                                    }
                                    if (t5.isAlive()) {
                                        t5.interrupt();
                                    }
                                    if (t7.isAlive()) {
                                        t7.interrupt();
                                    }
                                    if (t6.isAlive()) {
                                        t6.interrupt();
                                    }
                                    if (t.isAlive()) {
                                        t.interrupt();
                                    }
                                    if (t2.isAlive()) {
                                        t2.interrupt();
                                    }

                                    refresh();
                                }
                            });
                            break loop;
                        }
                        Thread.currentThread().sleep(5000);
                    } catch (InterruptedException | ConcurrentModificationException | NullPointerException ex) {
                        // Logger.getLogger(PhanteonGraphical.class.getName()).log(Level.SEVERE, null, ex);
                        logr.log(Level.SEVERE, "", ex);
                    }
                }
            }
        });
        thread.start();
    }

    private void StartProcesses() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    logr.log(Level.INFO, "START PROCCESS STARTED");
                    status = false;
                    jProgressBar1.setString("Destination analyzing . . .");
                    jButton1.setIcon(new ImageIcon("imgs/loadingicons.gif"));
                    jButton1.setEnabled(false);
                    jButton1.setText("STOP");
                    jProgressBar1.setValue(0);
                    jLabel1.setIcon(null);
                    jLabel8.setIcon(null);
                    jLabel9.setIcon(null);
                    jLabel10.setIcon(null);
                    jLabel11.setIcon(null);
                    jLabel12.setIcon(null);
                    jLabel13.setIcon(null);
                    jCheckBox1.setEnabled(false);
                    jCheckBox2.setEnabled(false);
                    jCheckBox4.setEnabled(false);
                    jCheckBox7.setEnabled(false);
                    jTabbedPane1.setEnabled(true);
                    //tab2 clean
                    jLabel27.setText("");
                    //asn
                    jLabel26.setText("");
                    //net range
                    jLabel29.setText("");
                    //country
                    jLabel28.setText("");
                    //nte name
                    jLabel31.setText("");
                    //organization
                    jLabel33.setText("");
                    //organization name
                    jLabel36.setText("");
                    //adress
                    jLabel38.setText("");
                    //target
                    jLabel24.setText("");
                    //ip
                    jLabel25.setText("");
                    //clear jtables
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.setRowCount(0);
                    DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
                    model2.setRowCount(0);
                    DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
                    model3.setRowCount(0);
                    DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
                    model4.setRowCount(0);
                    //clear text areas
                    jTextArea2.setText("");
                    jTextPane2.setText("");
                    //clear jlist
                    jList1.setListData(new String[0]);
                    jList2.setListData(new String[0]);
                    jList5.setListData(new String[0]);
                    //close notes
                    jTextArea3.setText("");
                    logr.log(Level.INFO, "START PROCCESS FINISHED");
                } catch (Exception ex) {
                    logr.log(Level.SEVERE, "startprocess", ex);
                }

            }
        });

    }

    public void execute() {
        int za = selectedScansString + 2;
        logr.log(Level.INFO, "Execute method started.");
        String targetPath = scanLib.getPhanteonTarget().getPath() + scanLib.getPhanteonTarget().getCompanyName();
        t = new Thread(new Runnable() {
            @Override
            public void run() {
                //logger.log("scanLib manuelenum started . . .");
                logr.log(Level.INFO, "Manuel enumeration started.");
                jList1.setListData(scanLib.ManuelEnum());
                //logger.success("scanLib manuelenum finished . . .");

                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        jProgressBar1.setString("ManuelEnum  finished");
                        jLabel1.setIcon(new ImageIcon("imgs/manuelOk.png"));

                        int va  = jProgressBar1.getValue() + 100 / za;
                        jProgressBar1.setValue(va);
                    }
                });
                logr.log(Level.INFO, "Manuel enumeration finished.");

            }
        });
        t2 = new Thread(new Runnable() {
            @Override
            public void run() {

                logr.log(Level.INFO, "Whois thread started.");
                // String a = scanLib.Whois();
                String whoisString = execute.commandExecutor("whois " + scanLib.getPhanteonTarget().getJustDomain());
                jTextPane2.setText(whoisString);
                jLabel24.setText(scanLib.getPhanteonTarget().getDestHost());
                jLabel25.setText(scanLib.getPhanteonTarget().getDestIp());
                String whoisString2 = execute.commandExecutor("whois " + scanLib.getPhanteonTarget().getDestIp() + "| egrep -i 'origin|range|name|organiz|Address|country|PostalCode|City'  ");
                execute.commandExecutor("echo \"" + whoisString + whoisString2 + "\" >> " + scanLib.getPhanteonTarget().getPath() + "info");
                whoisString2 = whoisString2.replace("https:", "");
                whoisString2 = whoisString2.replace("http:", "");

                String abc[] = whoisString2.split("\n");
                int i = 0;
                for (String a : abc) {
                    System.out.println(i + ">> " + a);

                    if (a.startsWith("CIDR")) {
                        //cidr
                        jLabel27.setText(abc[i].split(":")[1].replace(" ", ""));
                        scanLib.getPhanteonTarget().setCIDR(abc[i].split(":")[1].replace(" ", ""));
                    } else if (a.startsWith("OriginAS")) {
                        //asn
                        jLabel26.setText(abc[i].split(":")[1].replace(" ", ""));
                        jTextArea2.append(abc[i].split(":")[1].replace(" ", "\n"));
                        scanLib.getPhanteonTarget().setAsnNumber(scanLib.getPhanteonTarget().getAsnNumber() + abc[i].split(":")[1].replace(" ", ""));
                    } else if (a.startsWith("NetRange")) {
                        //netrange
                        jLabel29.setText(abc[i].split(":")[1].replace(" ", ""));
                    } else if (a.startsWith("Country")) {
                        //country
                        jLabel28.setText(abc[i].split(":")[1].replace(" ", ""));
                        jLabel28.setIcon(new ImageIcon("imgs/flags/" + abc[i].split(":")[1].replace(" ", "").toLowerCase() + ".png"));
                        System.out.println("imgs/flags/" + abc[i].split(":")[1].replace(" ", "").toLowerCase() + ".png");
                    } else if (a.startsWith("NetName")) {
                        //nte name
                        jLabel31.setText(abc[i].split(":")[1].replace(" ", ""));
                    } else if (a.startsWith("Organization")) {
                        //organization
                        jLabel33.setText(abc[i].split(":")[1].replace(" ", ""));
                    } else if (a.startsWith("OrgName")) {
                        //organization name
                        jLabel36.setText(abc[i].split(":")[1].replace(" ", ""));
                    } else if (a.contains("Address") || a.contains("PostalCode") || a.contains("City")) {
                        //adress
                        jLabel38.setText("<html>" + jLabel38.getText().replace("<html>", "").replace("</html>", "") + abc[i].split(":")[1].replace(" ", "") + " <br></html> ");

                    }
                    ++i;
                }
                //trace results
                jList3.setListData(scanLib.Whois(scanLib.getPhanteonTarget()));
                jProgressBar1.setString("Whois  finished");

                logr.log(Level.INFO, "Whois thread finished.");

                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        jLabel8.setIcon(new ImageIcon("imgs/relationalOk.png"));

                        int va  = jProgressBar1.getValue() + 100 / za;
                        jProgressBar1.setValue(va);
                    }
                });
            }
        });
        t4 = new Thread(new Runnable() {
            @Override
            public void run() {
                jProgressBar1.setString("Nmap analyzing . . .");
                //  logger.log("ScanLib nmap started . . .");
                // logr.getLogger(PhanteonGraphical.class.getName()).log(Level.INFO, null, "Nmap thread started.");
                logr.log(Level.INFO, "Nmap thread started.");
                ArrayList<String> list = new ArrayList<>();
                list = scanLib.PortScan((int) (jSlider1.getValue()));
                System.out.println("nmap");
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                for (int i = 0; i <= list.size() - 1; i++) {
                    model.addRow(new String[]{list.get(i), list.get(i + 1), list.get(i + 2), list.get(i + 3), list.get(i + 4), list.get(i + 5)});
                    i += 5;
                }
                ArrayList<String> list2 = scanLib.exploitSuggester(scanLib.getPhanteonTarget());

                String[] expl = list2.toArray(new String[list2.size()]);
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        jList5.setListData(expl);
                        jLabel9.setIcon(new ImageIcon("imgs/serverOk.png"));
                        jProgressBar1.setString("Nmap analyze finished");
                        int va  = jProgressBar1.getValue() + 100 / za;
                        jProgressBar1.setValue(va);
                    }
                });

                logr.log(Level.INFO, "Nmap thread finished.");

            }
        });
        t5 = new Thread(new Runnable() {
            @Override
            public void run() {
                jProgressBar1.setString("Ffuf analyzing . . .");

                logr.log(Level.INFO, "Ffuf thread started.");
                scanLib.HiddenDirectory(jSlider2.getValue(), jTextField10.getText(), jTextField8.getText() + ":" + jTextField9.getText(), jTextField14.getText());
                try {
                    BufferedReader br = new BufferedReader(new FileReader(new File(targetPath + "Ffuf.csv")));
                    List<String[]> elements = new ArrayList<String[]>();
                    String line = null;
                    while ((line = br.readLine()) != null) {
                        String[] splitted = line.split(",");
                        elements.add(splitted);
                    }
                    br.close();

                    DefaultTableModel tableModel4 = (DefaultTableModel) jTable4.getModel();
                    DefaultTableModel tableModel2 = (DefaultTableModel) jTable2.getModel();

                    for (int i = 1; i < elements.size(); i++) {
                        tableModel2.insertRow(tableModel2.getRowCount(), new Object[]{elements.get(i)[0], elements.get(i)[1], elements.get(i)[2], elements.get(i)[3], elements.get(i)[4], elements.get(i)[5], elements.get(i)[6], elements.get(i)[7]});
                        if (scanLib.checkParameter(elements.get(i)[1], scanLib.getPhanteonTarget())) {
                            System.out.println("POSSIBLE VULN URL : " + elements.get(i)[1]);
                            tableModel4.insertRow(tableModel4.getRowCount(), new Object[]{elements.get(i)[1]});
                        }
                    }

                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            jLabel10.setIcon(new ImageIcon("imgs/hiddenOk.png"));
                            int va  = jProgressBar1.getValue() + 100 / za;
                            jProgressBar1.setValue(va);
                            jProgressBar1.setString("Ffuf analyze finished");
                        }
                    });
                } catch (IOException ex) {
                    logr.log(Level.SEVERE, "", ex);
                }

                logr.log(Level.INFO, "Ffuf thread finished.");
            }
        });

        t6 = new Thread(new Runnable() {
            @Override
            public void run() {
                jProgressBar1.setString("Amass analyzing . . .");

                logr.log(Level.INFO, "Amass thread started.");
                String as = scanLib.AsnLookUp().replaceAll("[,\\]\\[\\\"]", "\n");
                jTextArea4.setText(as);
                execute.commandExecutor("echo " + as + " >> " + scanLib.getPhanteonTarget().getPath() + "info");

                jLabel13.setIcon(new ImageIcon("imgs/searchingOk.png"));
                ArrayList<String> sub = new ArrayList<>();
                sub = scanLib.SubdomainDiscovery(jTextField11.getText(), jTextField15.getText());
                String data[] = new String[sub.size()];
                //adding values into data array
                for (int i = 0; i < sub.size(); i++) {
                    data[i] = sub.get(i);
                }
                System.out.println("DATA LENGTH >  " + data.length);

                //Setting list array
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        jList2.setListData(data);
                        jLabel11.setIcon(new ImageIcon("imgs/subdomainOk.png"));
                        jProgressBar1.setString("Amass analyze finished");
                        int va  = jProgressBar1.getValue() + 100 / za;
                        jProgressBar1.setValue(va);
                    }
                });

                logr.log(Level.INFO, "Amass thread finished.");

            }

        });

        t7 = new Thread(new Runnable() {
            @Override
            public void run() {
                //look here not working ! ! !
                jProgressBar1.setString("GoSpider analyzing . . .");

                logr.log(Level.INFO, "Gospider thread started.");
                ArrayList<String> list = new ArrayList<>();
                list = scanLib.SiteMap(jComboBox1.getSelectedIndex() + 1, jComboBox2.getSelectedIndex() + 1, jComboBox4.getSelectedIndex() + 1);
                //  Object[][] content = new Object[list.size()][2];
                DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
                DefaultTableModel model2 = (DefaultTableModel) jTable4.getModel();

                for (int i = 0; i <= list.size() - 1; i++) {
                    String list2[] = new String[2];
                    list2 = (list.get(i).split(" - "));
                    if (list2.length == 2) {
                        String aa[] = new String[3];
                        aa[0] = list2[0];
                        aa[1] = "";
                        aa[2] = list2[1];
                        model.addRow(aa);
                        if (scanLib.checkParameter(aa[aa.length - 1].toString(), scanLib.getPhanteonTarget())) {
                            System.out.println("POSSIBLE VULN URL : " + aa[aa.length - 1]);
                            model2.insertRow(model2.getRowCount(), new Object[]{aa[aa.length - 1]});

                        }
                    } else {
                        model.addRow(list2);
                        if (scanLib.checkParameter(list2[list2.length - 1].toString(), scanLib.getPhanteonTarget())) {
                            System.out.println("POSSIBLE VULN URL 2 : " + list2[list2.length - 1]);
                            model2.insertRow(model2.getRowCount(), new Object[]{list2[list2.length - 1]});
                        }
                    }
                }
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        jLabel12.setIcon(new ImageIcon("imgs/spiderOk.png"));
                        jProgressBar1.setString("GoSpider analyze finished");
                        int va  = jProgressBar1.getValue() + 100 / za;
                        jProgressBar1.setValue(va);
                    }
                });
                logr.log(Level.INFO, "Gospider thread finished.");

                //running amass * because internet bandwith throttle
                if (jCheckBox7.isSelected()) {
                    t6.start();
                    scanLib.setProcessStatus("amass", "started");
                }

            }
        });
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                // if(jRadioButton1.is
                t.start();
                t2.start();
                if (jCheckBox2.isSelected()) {
                    t4.start();
                }
                if (jCheckBox4.isSelected()) {
                    t5.start();
                }
                if (!jCheckBox1.isSelected() && jCheckBox7.isSelected()) {
                    t6.start();
                }
                //t6 starting in after gospider inside of go spider because performance issues
                if (jCheckBox1.isSelected()) {
                    t7.start();
                }
            }
        });
    }

    public void refresh() {

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {

                    System.out.println("REFRESH STARTED");
                    jButton1.setIcon(new ImageIcon("imgs/vulnerability.png"));
                    // jProgressBar1.setString("Processes interrupted !");

                    jTabbedPane6.setTitleAt(1, " - ");
                    //clear complete icons
                    jLabel1.setIcon(null);
                    jLabel8.setIcon(null);
                    jLabel9.setIcon(null);
                    jLabel10.setIcon(null);
                    jLabel11.setIcon(null);
                    jLabel12.setIcon(null);
                    jLabel13.setIcon(null);
                    jCheckBox1.setEnabled(true);
                    jCheckBox2.setEnabled(true);
                    jCheckBox4.setEnabled(true);
                    jCheckBox7.setEnabled(true);
                    jButton1.setText("SCAN");
                    jProgressBar1.setValue(100);
                    jProgressBar1.setValue(0);
                    jProgressBar1.setString("Scan & Enumeration stopped .");
                    status = true;
                    jButton1.setEnabled(true);
                    System.out.println("REFRESH FINISHED");
                } catch (Exception ex) {
                    logr.log(Level.SEVERE, "refresh error", ex);
                }
            }
        });
    }

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                //PrefrencesMenu prefrencesMenu = new PrefrencesMenu();
                //prefrencesMenu.setVisible(true);
                JOptionPane.showMessageDialog(null,
                        "Not yet .",
                        "Phanteon Scan & Discovery",
                        JOptionPane.INFORMATION_MESSAGE
                );
            }
        });

    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                int random = (int) (Math.random() * 7) + 1;
                System.out.println(random);
                ImageIcon img = new ImageIcon("imgs/phanteonAbout" + random + ".gif");
                JOptionPane.showMessageDialog(null,
                        "<html><b><h1>Phanteon Scan & Discovery</h1></b><br><br>Phanteon aims to serve less effort and much readable data.Phanteon can be your first step for the scan your target.<br>"
                        + " <html>After that processes , you can dive deep with manually to these datas."
                        + "<html>Phanteon basically manas and automatically runs The Following Tools : <br>"
                        + "<html><ul><li> Amass </li> <li>Ffuf</li> <li>GoSpider</li> <li>Nmap</li> <li>AsnlookUp api</li> <li>Exploitdb</li> <li>Nikto</li> <li>Spyse</li><li>Wafw00f</li></ul>"
                        + "<html><br><br><br><i>Developed by Melih Isbilen 2020</i><",
                        "Phanteon Scan & Discovery",
                        JOptionPane.INFORMATION_MESSAGE,
                        img
                );
            }
        });


    }//GEN-LAST:event_jMenu3MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //logr.getLogger(PhanteonGraphical.class.getName()).log(Level.INFO, null, "Terminal button pressed");
        logr.log(Level.INFO, "Terminal button pressed");
        // logger.log("Command executed  " + jTextArea1.getText());
        //  jTextPane1.setText(jTextPane1.getText() + "\nPhanteonUser $ : " + jTextArea1.getText() + "\n");
        jTextPane1.append("\nPhanteonUser  " + jTextArea1.getText() + "\n");

        switch (jTextArea1.getText()) {
            case "clear":
                // code block
                System.out.println("clear working");
                jTextPane1.setText("");
                jTextArea1.setText("");
                jButton2.setEnabled(true);
                break;

            default:

                Thread t;
                t = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        if (jButton2.getText().equals("X")) {
                            if (execute.getProcessLive() == true) {
                                execute.killProcess();
                                System.out.println(execute.getProcessLive());
                            } else {
                                jButton2.setBackground(java.awt.SystemColor.inactiveCaption);

                            }

                        } else {
                            jButton2.setBackground(new java.awt.Color(255, 46, 33));
                            jButton2.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 12));
                            jButton2.setText("X");

                            String output = execute.commandExecutor(jTextArea1.getText());

                            SwingUtilities.invokeLater(new Runnable() {
                                public void run() {
                                    jTextPane1.append(output);

                                    jTextArea1.setText("");
                                    jScrollPane6.getVerticalScrollBar().setValue(jScrollPane6.getVerticalScrollBar().getMaximum());
                                    jButton2.setBackground(java.awt.SystemColor.inactiveCaption);

                                }
                            });
                            jButton2.setText("");
                        }
                    }
                });
                t.start();
                break;

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed
        // TODO add your handling code here:

        int code = evt.getKeyCode();
        if (code == KeyEvent.VK_ENTER) {
            jButton2.doClick();
            history.add(jTextArea1.getText());
            count = history.size();
            System.out.println(count);
        } else if (code == KeyEvent.VK_UP) {
            try {
                jTextArea1.setText(history.get(count - 1));
                count = count - 1;
                if (count <= 0) {
                    count = history.size();
                }
            } catch (IndexOutOfBoundsException ex) {
                //logger.log(" Exception > IndexOutOfBoundsException " + ex.getMessage());
                logr.log(Level.SEVERE, "", ex);
            }
        }
    }//GEN-LAST:event_jTextArea1KeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.out.println("ctrl +alt+s ");
        JFrame parentFrame = new JFrame();
        JFileChooser fileChooser = new JFileChooser();
        int userSelection = fileChooser.showSaveDialog(parentFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            PhanteonNote a = new PhanteonNote();
            String x = fileToSave.getAbsolutePath();
            String read = a.Read(x);
            jTextArea3.setText(read);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {

                if (note >= 5) {

                } else if (note <= 5) {

                    note += 1;
                    String variNo = String.valueOf(note);

                    javax.swing.JMenuBar menubar = new javax.swing.JMenuBar();

                    javax.swing.JMenu menu1 = new javax.swing.JMenu("File");

                    javax.swing.JMenuItem item1 = new javax.swing.JMenuItem("Save");

                    menu1.add(item1);

                    menubar.add(menu1);

                    javax.swing.JInternalFrame frame = new javax.swing.JInternalFrame(" PhaNote " + note, true, true, true, true);
                    frame.setSize(300, 300);
                    frame.setVisible(true);

                    javax.swing.JTextArea text = new javax.swing.JTextArea(12, 12);
                    text.setFont(new java.awt.Font("Nimbus Sans", 0, 16));
                    text.setInheritsPopupMenu(true);
                    text.setLineWrap(true);

                    javax.swing.JScrollPane scroll = new javax.swing.JScrollPane(text);
                    scroll.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
                    scroll.setViewportView(text);

                    frame.add(menubar, BorderLayout.NORTH);

                    item1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
                    item1.addActionListener(new java.awt.event.ActionListener() {
                        @Override
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PhanteonNote note = new PhanteonNote();
                            note.WriteNote(scanLib, text.getText(), variNo);

                        }
                    });
                    frame.add(scroll);
                    jDesktopPane1.add(frame);

                }

            }
        });


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.out.println("ctrl +S ");
        String a = jTextArea3.getText();
        PhanteonNote note = new PhanteonNote();
        note.WriteNote(scanLib, a, "");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        PhanteonNote note = new PhanteonNote();
        jTextArea3.append(note.WriteTable());
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jTextArea3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea3KeyTyped
        // TODO add your handling code here:
        jLabel7.setText(columnRow());
    }//GEN-LAST:event_jTextArea3KeyTyped

    private void jTextArea3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea3MouseClicked
        // TODO add your handling code here:
        jLabel7.setText(columnRow());
    }//GEN-LAST:event_jTextArea3MouseClicked

    private void jProgressBar1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jProgressBar1StateChanged
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                //ISLEM SAYISI TEK OLDUGU ICIN 100E BOLUNMEDIGI ICIN TAMAMLIYORUZ
                if (100 - jProgressBar1.getValue() < 10) {
                    jProgressBar1.setValue(100);
                }
                if (jProgressBar1.getValue() >= 100) {
                    jButton1.setIcon(new ImageIcon("imgs/vulnerability.png"));
                    status = true;
                    jCheckBox1.setEnabled(true);
                    jCheckBox2.setEnabled(true);
                    jCheckBox4.setEnabled(true);
                    jCheckBox7.setEnabled(true);
                    jButton1.setText("SCAN");
                    jButton1.setEnabled(true);

                    if (jList5.getModel().getSize() >= 5) {
                        JOptionPane.showConfirmDialog(jTabbedPane6, "I found exploits check it out !", "Phanteon Scan & Enumeration",
                                JOptionPane.CLOSED_OPTION,
                                JOptionPane.INFORMATION_MESSAGE);
                    }

                }
            }
        });


    }//GEN-LAST:event_jProgressBar1StateChanged

    private void jList4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList4MouseClicked
        // TODO add your handling code here:
        Thread read;
        read = new Thread(new Runnable() {
            @Override
            public void run() {
                jList4.setEnabled(false);

                String readme = get.GetGithubReadme(jList4.getSelectedValue());
                jEditorPane4.setText(readme);
                jList4.setEnabled(true);

            }
        });
        read.start();

    }//GEN-LAST:event_jList4MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {

            String url = jList4.getSelectedValue();
            jProgressBar1.setString("Copied : " + "\"" + jList4.getSelectedValue() + "\"");
            Toolkit toolkit2 = Toolkit.getDefaultToolkit();
            Clipboard clipboard2 = toolkit2.getSystemClipboard();
            StringSelection strSel2 = new StringSelection(url);
            clipboard2.setContents(strSel2, null);
        } catch (Exception ex) {
            System.out.println("Url copy fail");
            //logger.log(" Exception > Url copy fail " + ex.getMessage());
            logr.log(Level.SEVERE, "", ex);

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        copyClipboard(jList1.getSelectedValue());

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

        Thread selenium;
        selenium = new Thread(new Runnable() {
            @Override
            public void run() {
                try {

                    jButton8.setEnabled(false);

                    String path = get.TakeScreenShot(scanLib.getPhanteonTarget().getPath(), jTextField7.getText());

                    File background = new File(path);
                    System.out.println(background);
                    URL url = background.toURI().toURL();
                    System.out.println(url);

                    String a = "<html><br><body>"
                            + "<img  style='height: 100%; width: 100%;' src=\"" + url.toString() + "\" ><br>"
                            + "</body></html>";
                    System.out.println(a);
                    List<NameValuePair> urlParameters = new ArrayList<>();
                    String spl[] = jTextField12.getText().split("&");
                    String sp2[];
                    if (String.valueOf(jComboBox5.getSelectedItem()) == "POST") {
                        for (String value : spl) {
                            sp2 = value.split("=");
                            urlParameters.add(new BasicNameValuePair(sp2[0], sp2[1]));
                            System.out.println(sp2[0] + "   " + sp2[1]);
                        }
                        String test = get.GetSourceCode(jTextField7.getText(), String.valueOf(jComboBox5.getSelectedItem()), urlParameters);
                        String test2 = test.replaceAll(">", "> \n");
                        jEditorPane6.setText(test2);

                    } else {
                        String test = get.GetSourceCode(jTextField7.getText(), String.valueOf(jComboBox5.getSelectedItem()), null);
                        String test2 = test.replaceAll(">", "> \n");
                        jEditorPane6.setText(test2);

                    }

                    jEditorPane7.setText(a);
                    // jEditorPane6.setText(get.GetContent(jTextField7.getText()));
                    jEditorPane8.setPage(jTextField7.getText());
                    jButton8.setEnabled(true);

                } catch (Exception ex) {
                    // logger.critical(" Exception > Url render fail " + Ex.getMessage());
                    logr.log(Level.SEVERE, "", ex);
                }
            }
        }
        );
        if (jTextField7.getText()
                .contains(".") && jTextField7.getText().contains("https://") || jTextField7.getText().contains("http://")) {

            selenium.start();

        } else {
            jLabel14.setForeground(new Color((int) (Math.random() * 0x1000000)));
            jLabel14.setText("An error occurred !");
        }


    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTable3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseReleased
        // TODO add your handling code here:
        if (evt.getModifiers() == MouseEvent.BUTTON3_MASK) {
            jPopupMenu1.show(jTable3, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable3MouseReleased

    private void SitemapBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SitemapBrowserActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                openWithBrowser(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
            }
        });


    }//GEN-LAST:event_SitemapBrowserActionPerformed

    private void SitemapVulnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SitemapVulnListActionPerformed
        // TODO add your handling code here:
        addVulnList(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());


    }//GEN-LAST:event_SitemapVulnListActionPerformed

    private void SitemapRequestResponseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SitemapRequestResponseActionPerformed
        // TODO add your handling code here:
        sendRequestResponse(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_SitemapRequestResponseActionPerformed

    private void jDesktopPane1ComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jDesktopPane1ComponentRemoved
        // TODO add your handling code here:
        note -= 1;
    }//GEN-LAST:event_jDesktopPane1ComponentRemoved

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            selectedScansString = selectedScansString + 1;
            int a = jProgressBar1.getValue() + 100 / selectedScansString + 2;
            System.out.println(a);
        } else {
            selectedScansString = selectedScansString - 1;
        }
        System.out.println(selectedScansString);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox2.isSelected()) {
            selectedScansString = selectedScansString + 1;
            int a = jProgressBar1.getValue() + 100 / selectedScansString + 2;
            System.out.println(a);
        } else {
            selectedScansString = selectedScansString - 1;
        }
        System.out.println(selectedScansString);
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox4.isSelected()) {
            selectedScansString = selectedScansString + 1;
            int a = jProgressBar1.getValue() + 100 / selectedScansString + 2;
            System.out.println(a);
        } else {
            selectedScansString = selectedScansString - 1;
        }
        System.out.println(selectedScansString);
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox7.isSelected()) {
            selectedScansString = selectedScansString + 1;
            int a = jProgressBar1.getValue() + 100 / selectedScansString + 2;
            System.out.println(a);
        } else {
            selectedScansString = selectedScansString - 1;
        }

        System.out.println(selectedScansString);
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("./PhanteonLists"));
        chooser.setDialogTitle("Select wordlist");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(true);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            jTextField10.setText(chooser.getSelectedFile().getAbsolutePath());
            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
        } else {
            System.out.println("No Selection ");
            jTextField10.setText("PhanteonLists/SecLists/Discovery/Web-Content/common.txt");
        }
        chooser = null;
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        jButton10.setEnabled(false);
        jButton1.setEnabled(false);
        Thread test = new Thread(new Runnable() {
            @Override
            public void run() {
                boolean status;
                try {

                    Thread.currentThread().sleep(1000);
                    String ipString = jTextField8.getText().replaceAll("^(http|https)://", "");
                    if (jTextField8.getText().length() < 15) {
                        System.out.println("proxy invalid");
                        jButton10.setEnabled(true);
                        jButton1.setEnabled(true);
                    } else {
                        CheckProxy check = new CheckProxy();
                        check.setVisible(true);
                        status = check.CheckService(ipString, Integer.parseInt(jTextField9.getText()));
                        if (status) {

                            // check.dispose();
                            JOptionPane.showConfirmDialog(jPanel1, "This proxy   working properly . Proxies can be unstable be careful . Use Only http proxy ffuf doesn't support https", "Phanteon Scan & Enumeration",
                                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                            System.out.println("CHECK PROXY WINDOW FINISHED 1");
                            check.dispose();

                        } else if (status == false) {
                            //  check.dispose();
                            JOptionPane.showConfirmDialog(jPanel1, "This proxy NOT working properly .", "Phanteon Scan & Enumeration",
                                    JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                            System.out.println("CHECK PROXY WINDOW FINISHED 2");

                        } else {
                            check.dispose();
                        }
                        jButton10.setEnabled(true);
                        jButton1.setEnabled(true);
                        System.out.println("CHECK PROXY WINDOW FINISHED");
                    }
                } catch (InterruptedException ex) {
                    logr.log(Level.SEVERE, "", ex);

                } finally {

                }

            }
        });

        test.start();


    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("./PhanteonLists"));
        chooser.setDialogTitle("Select wordlist");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(true);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            jTextField11.setText(chooser.getSelectedFile().getAbsolutePath());
            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
        } else {
            System.out.println("No Selection ");
            jTextField11.setText("PhanteonLists/PhanteonSublistV3");
        }
        chooser = null;
    }//GEN-LAST:event_jButton12ActionPerformed

    private void HiddenDirectoryBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HiddenDirectoryBrowserActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                openWithBrowser(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
            }
        });
    }//GEN-LAST:event_HiddenDirectoryBrowserActionPerformed

    private void HiddenDirectoryVulnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HiddenDirectoryVulnListActionPerformed
        // TODO add your handling code here:
        addVulnList(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_HiddenDirectoryVulnListActionPerformed

    private void HiddenDirectoryResponseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HiddenDirectoryResponseActionPerformed
        // TODO add your handling code here:
        sendRequestResponse(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_HiddenDirectoryResponseActionPerformed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:
        if (evt.getModifiers() == MouseEvent.BUTTON3_MASK) {
            jPopupMenu2.show(jTable2, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable2MouseReleased

    private void SitemapScreenShootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SitemapScreenShootActionPerformed
        // TODO add your handling code here:

        int[] selectedRow = jTable3.getSelectedRows();
        ArrayList<String> data = new ArrayList<>();
        for (int ind : selectedRow) {
            data.add(jTable3.getValueAt(ind, 2).toString());
        }
        screenShootMachine(data);

    }//GEN-LAST:event_SitemapScreenShootActionPerformed

    private void HiddenDirectoryScreenShootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HiddenDirectoryScreenShootActionPerformed
        // TODO add your handling code here:

        int[] selectedRow = jTable2.getSelectedRows();
        ArrayList<String> data = new ArrayList<>();
        for (int ind : selectedRow) {
            data.add(jTable2.getValueAt(ind, 1).toString());

        }
        screenShootMachine(data);
    }//GEN-LAST:event_HiddenDirectoryScreenShootActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        Thread search = new Thread(new Runnable() {
            @Override
            public void run() {
                jEditorPane6.getHighlighter().removeAllHighlights();
                jButton13.setEnabled(false);
                jTextField13.setBackground(Color.white);
                Document get = jEditorPane6.getDocument();
                try {
                    String find = jTextField13.getText();
                    String match = "";
                    for (int index = 0; index + find.length() < get.getLength(); index++) {
                        match = get.getText(index, find.length());
                        if (find.equals(match)) {
                            javax.swing.text.DefaultHighlighter.DefaultHighlightPainter highlightPainter = new javax.swing.text.DefaultHighlighter.DefaultHighlightPainter(Color.YELLOW);
                            jEditorPane6.getHighlighter().addHighlight(index, index + find.length(), highlightPainter);
                            jTextField13.setBackground(Color.GREEN);

                        }
                    }
                    jButton13.setEnabled(true);
                } catch (Exception ex) {
                    logr.log(Level.SEVERE, "response search error ", ex);
                }

            }
        });
        search.start();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("./"));
        chooser.setDialogTitle("Select config");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(true);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            jTextField14.setText(chooser.getSelectedFile().getAbsolutePath());
            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
        } else {
            System.out.println("No Selection ");
            jTextField11.setText("config.ini");
        }
        chooser = null;
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        openWithBrowser(jList1.getSelectedValue());
    }//GEN-LAST:event_jButton15ActionPerformed

    private void SubdomainCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubdomainCopyActionPerformed
        // TODO add your handling code here:
        copyClipboard(jList2.getSelectedValue());
    }//GEN-LAST:event_SubdomainCopyActionPerformed

    private void jList2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseReleased
        // TODO add your handling code here:
        if (evt.getModifiers() == MouseEvent.BUTTON3_MASK) {
            jPopupMenu3.show(jList2, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jList2MouseReleased

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("./"));
        chooser.setDialogTitle("Select list");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(true);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
                jTextField16.setText(chooser.getSelectedFile().getAbsolutePath());
                System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
                System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
                ArrayList<String> list = new ArrayList<>();
                Scanner s = new Scanner(new File(jTextField16.getText()));

                while (s.hasNext()) {
                    list.add(s.next());
                }
                s.close();
                screenShootMachine(list);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PhanteonGraphical.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("No Selection ");

        }
        chooser = null;
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        // TODO add your handling code here:
        try {
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();

                    if (node.getUserObject().toString().startsWith("github")) {
                        jEditorPane2.setText(get.GetGithubReadme("https://" + node.getUserObject().toString()));
                    }
                }
            });

        } catch (NullPointerException ex) {
            logr.log(Level.SEVERE, "JTREE 1 error ", ex);
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void jTree2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree2MouseClicked
        // TODO add your handling code here:
        try {
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree2.getLastSelectedPathComponent();

                    if (node.getUserObject().toString().startsWith("github")) {
                        jEditorPane5.setText(get.GetGithubReadme("https://" + node.getUserObject().toString()));
                    }

                }
            });

        } catch (NullPointerException ex) {
            logr.log(Level.SEVERE, "JTREE2 ERROR", ex);

        }
    }//GEN-LAST:event_jTree2MouseClicked

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        Thread nikto = new Thread(new Runnable() {
            @Override
            public void run() {
                logr.log(Level.INFO, "nikto enumeration started.");

                jButton17.setEnabled(false);
                execute.commandExecutor("nikto -h  " + jTextField17.getText() + " >> " + scanLib.getPhanteonTarget().getPath() + "Nikto.txt");
                String data = execute.commandExecutor("cat " + scanLib.getPhanteonTarget().getPath() + "Nikto.txt");
                jTextArea6.setText(data);
                jButton17.setEnabled(true);

                logr.log(Level.INFO, "nikto enumeration finished.");
                data = null;
            }
        });
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                nikto.start();
            }
        });
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Thread wafw00f = new Thread(new Runnable() {
            @Override
            public void run() {
                logr.log(Level.INFO, "wafw00f enumeration started.");

                jButton4.setEnabled(false);
                String proString = jTextField8.getText() + ":" + jTextField9.getText();
                if (proString.length() >= 10) {
                    execute.commandExecutor("wafw00f -a -p " + proString + " " + jTextField5.getText() + " | tail -n +15 >> " + scanLib.getPhanteonTarget().getPath() + "Waffwoof.txt");
                } else {
                    execute.commandExecutor("wafw00f -a  " + jTextField5.getText() + " | tail -n +15 >> " + scanLib.getPhanteonTarget().getPath() + "Waffwoof.txt");
                }

                jTextArea7.setText(execute.commandExecutor("cat " + scanLib.getPhanteonTarget().getPath() + "Waffwoof.txt"));
                jButton4.setEnabled(true);

                logr.log(Level.INFO, "wafw00f enumeration finished.");

            }
        });
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                wafw00f.start();
            }
        });
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jList1.getModel().getSize(); i++) {
            openWithBrowser(jList1.getModel().getElementAt(i));
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseEntered
        // TODO add your handling code here:
        jComboBox3.removeAllItems();
        String data = execute.commandExecutor("ls  -lt PhanteonRESULTS | tail -n +2");
        String data2[] = data.split("\n");
        for (String string : data2) {
            jComboBox3.addItem(string);
        }
    }//GEN-LAST:event_jComboBox3MouseEntered

    private void SitemapNiktoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SitemapNiktoActionPerformed
        // TODO add your handling code here:
        jTextField17.setText(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_SitemapNiktoActionPerformed

    private void SitmapWafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SitmapWafActionPerformed
        // TODO add your handling code here:
        jTextField5.setText(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_SitmapWafActionPerformed

    private void HiddenDirectoryNiktoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HiddenDirectoryNiktoActionPerformed
        // TODO add your handling code here:
        jTextField17.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_HiddenDirectoryNiktoActionPerformed

    private void HIddenDirectoryWafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HIddenDirectoryWafActionPerformed
        // TODO add your handling code here:
        jTextField5.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_HIddenDirectoryWafActionPerformed

    private void jTable4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseReleased
        // TODO add your handling code here:
        if (evt.getModifiers() == MouseEvent.BUTTON3_MASK) {
            jPopupMenu4.show(jTable4, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable4MouseReleased

    private void jLabel47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel47MouseClicked
        // TODO add your handling code here:
        openWithBrowser("https://github.com/Phanteon");
        openWithBrowser("http://melihi.tech");
    }//GEN-LAST:event_jLabel47MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, jList4.getSelectedValue()
                + " installing started .",
                "Phanteon Scan & Discovery",
                JOptionPane.INFORMATION_MESSAGE
        );
        Thread tg = new Thread(new Runnable() {
            @Override
            public void run() {

                execute.commandExecutor("cd PhanteonLists/ && git clone  " + jList4.getSelectedValue() + ".git");

            }
        });

        tg.start();
    }//GEN-LAST:event_jButton9ActionPerformed

    public String columnRow() {
        logr.log(Level.INFO, "columnRow working");
        int linenum = 1;
        int columnnum = 1;
        String result = null;
        try {

            int caretpos = jTextArea3.getCaretPosition();
            linenum = jTextArea3.getLineOfOffset(caretpos);

            columnnum = caretpos - jTextArea3.getLineStartOffset(linenum);

            // We have to add one here because line numbers start at 0 for getLineOfOffset and we want it to start at 1 for display.
            linenum += 1;
            result = linenum + ":" + columnnum;
        } catch (Exception ex) {

            logr.log(Level.SEVERE, "columnRow error", ex);
        }
        return result;
    }

    public void openWithBrowser(String adress) {
        logr.log(Level.INFO, "openWithBrowser working");
        if (Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {
            try {
                // String get = jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString();
                Desktop.getDesktop().browse(new URI(adress));

            } catch (Exception ex) {
                //  logger.critical(" Exception > Url openWithBrowser fail " + ex.getMessage());
                logr.log(Level.SEVERE, "", ex);
            }
        }

    }

    public void addVulnList(String address) {
        logr.log(Level.INFO, "addVulnList working");
        try {

            DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
            model.insertRow(model.getRowCount(), new Object[]{address});
            //model.addRow(new Object[]{get});
        } catch (Exception ex) {
            // logger.critical(" Exception > Url copy fail " + ex.getMessage());
            logr.log(Level.SEVERE, "addVulnList error", ex);
        }
    }

    public void sendRequestResponse(String address) {
        logr.log(Level.INFO, "sendRequestResponse working");
        try {

            jTextField7.setText(address);
            jProgressBar1.setString("Sended  > " + address);

        } catch (Exception ex) {
            // logger.critical(" Exception > Url copy fail " + ex.getMessage());
            logr.log(Level.SEVERE, "sendRequestResponse error", ex);
        }
    }

    public void screenShootMachine(ArrayList<String> data) {
        logr.log(Level.INFO, "screenShootMachine working");
        JOptionPane.showMessageDialog(this, data.size() + " total screenshot process started.", "Phanteon", JOptionPane.INFORMATION_MESSAGE);
        Thread shot = new Thread(new Runnable() {
            @Override
            public void run() {

                try {
                    String path = scanLib.getPhanteonTarget().getPath();
                    for (String addres : data) {

                        get.TakeScreenShot(path, addres);
                        jTextArea5.append(addres + "     >       " + path + "\n");
                    }
                } catch (Exception ex) {
                    // logger.critical(" Exception > Url copy fail " + ex.getMessage());
                    logr.log(Level.SEVERE, "screenShootMachine error", ex);
                }

            }
        });

        shot.start();
    }

    public void copyClipboard(String copy) {
        try {
            if (copy != null) {
                jProgressBar1.setString("Copied : " + "\"" + copy + "\"");
                Toolkit toolkit = Toolkit.getDefaultToolkit();
                Clipboard clipboard = toolkit.getSystemClipboard();
                StringSelection strSel = new StringSelection(copy);
                clipboard.setContents(strSel, null);
            }

        } catch (Exception ex) {
            System.out.println("Url copy fail");
            //logger.critical(" Exception > Url copy fail " + ex.getMessage());
            logr.log(Level.SEVERE, "", ex);

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    PhanteonGraphical.setLogger();

                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhanteonGraphical.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                new PhanteonGraphical().setVisible(true);

            }
        });

    }

    public static void setLogger() {
        try {
            LogManager.getLogManager().reset();
            logr.setLevel(Level.ALL);
            FileHandler fh = new FileHandler("PhanteonLOG.log", true);
            logr.setLevel(Level.ALL);
            logr.addHandler(fh);
            ConsoleHandler ch = new ConsoleHandler();
            ch.setLevel(Level.ALL);
            logr.addHandler(ch);
        } catch (IOException ex) {
            logr.log(Level.SEVERE, "", ex);
        } catch (SecurityException ex) {
            logr.log(Level.SEVERE, "", ex);
        }
    }

    @Override
    public void run() {

    }

    //Variables
    //static ConsoleLogger logger = new ConsoleLogger();
    static CommandExecution execute = new CommandExecution();
    PhanteonGetWeb get = new PhanteonGetWeb();
    final RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();
    ScanLib scanLib;
    Thread aq;
    Thread t;
    Thread t2;
    Thread t4;
    Thread t5;
    Thread t6;
    Thread t7;
    static int selectedScansString = 0;
    static ArrayList<String> history = new ArrayList<>();
    static int count;
    static boolean status = true;
    static ThreadMXBean bean = ManagementFactory.getThreadMXBean();
    static int threadCount = bean.getThreadCount();
    double Cpu;
    double Memory;
    final int pid = (int) runtime.getPid();
    String valuesCpu = "";
    String valuesMemo = "";
    int note = 0;

    private final static Logger logr = Logger.getLogger(PhanteonGraphical.class.getName());
    javax.swing.JInternalFrame jInternalFrame2;
    //Variables
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem HIddenDirectoryWaf;
    private javax.swing.JMenuItem HiddenDirectoryBrowser;
    private javax.swing.JMenuItem HiddenDirectoryNikto;
    private javax.swing.JMenuItem HiddenDirectoryResponse;
    private javax.swing.JMenuItem HiddenDirectoryScreenShoot;
    private javax.swing.JMenuItem HiddenDirectoryVulnList;
    private javax.swing.JMenuItem PossibleVulnCopy;
    private javax.swing.JMenuItem SitemapBrowser;
    private javax.swing.JMenuItem SitemapNikto;
    private javax.swing.JMenuItem SitemapRequestResponse;
    private javax.swing.JMenuItem SitemapScreenShoot;
    private javax.swing.JMenuItem SitemapVulnList;
    private javax.swing.JMenuItem SitmapWaf;
    private javax.swing.JMenuItem SubdomainCopy;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JEditorPane jEditorPane2;
    private javax.swing.JEditorPane jEditorPane4;
    private javax.swing.JEditorPane jEditorPane5;
    private javax.swing.JEditorPane jEditorPane6;
    private javax.swing.JEditorPane jEditorPane7;
    private javax.swing.JEditorPane jEditorPane8;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JTabbedPane jTabbedPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextArea jTextPane1;
    private javax.swing.JTextArea jTextPane2;
    private javax.swing.JTree jTree1;
    private javax.swing.JTree jTree2;
    // End of variables declaration//GEN-END:variables

}
